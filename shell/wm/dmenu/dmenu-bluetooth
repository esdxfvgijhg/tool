#!/bin/bash

dmenu=$HOME/.config/Scripts/dmenucolor

_bluetoothctl() {
  LC_ALL=C timeout 30 bluetoothctl
}

mode=connect

i=2

for arg do
  if [[ $arg == :: ]]; then
    dmenu_args=( "${@:$i}" )
    break
  fi

  case "$arg" in
    -d) mode=disconnect ;;
  esac

  (( i++ ))
done

# Name -> MAC
declare -A DEVICES
while read -r _ mac name; do
  echo "info $mac" | _bluetoothctl | grep -q "Connected: yes"
  connected="$?"
  if  [ $connected = 0 ]; then
    if [ $mode = "disconnect" ]; then
      DEVICES["$name"]=$mac
    fi
  else
    if [ $mode = "connect" ]; then
      DEVICES["$name"]=$mac
    fi
  fi
done < <(echo "devices" | _bluetoothctl | awk '$1 == "Device"')

notify() {
  local msg
  local is_error

  msg=${1?BUG: no message}
  is_error=${2:-0}

  if command -v notify-send >/dev/null 2>&1; then
    notify-send "bluetooth" "$msg"  # TODO: escaping
  fi

  if (( is_error )); then
    printf 'ERROR: %s\n' "$msg" >&2
  else
    printf '%s\n' "$msg"
  fi
}

execute_mode() {
  local mode
  local name
  local mac
  local preposition
  local expected_to_connect
  local retries

  mode=${1?BUG: missing mode}
  retries=15

  case $mode in
    connect)
      preposition=to
      expected_to_connect=yes
    ;;
    disconnect)
      preposition=from
      expected_to_connect=no
    ;;
  esac

  if ! (( ${#DEVICES[@]} )); then
    notify "No devices found. Are they registered with D-Bus?" 1
    return 2
  fi

  name=$(printf '%s\n' "${!DEVICES[@]}" | $dmenu -p "Bluetooth $mode" "${dmenu_args[@]}")
  [[ $name ]] || return
  mac=${DEVICES["$name"]}

  notify "Attempting to $mode $preposition $name"

  while (( retries-- )); do
    printf 'power on\n%s %s\n' "$mode" "$mac" | _bluetoothctl
    if printf 'info %s\n' "$mac" |
      _bluetoothctl |
      grep -Pq '^[\t ]+Connected: '"$expected_to_connect"; then
      notify "${mode^}ed $preposition $name"
      return 0
    fi
    sleep 1
  done

  ret="$?"
  notify "Failed to $mode $preposition $name" 1
  return "$ret"
}

execute_mode "$mode"
